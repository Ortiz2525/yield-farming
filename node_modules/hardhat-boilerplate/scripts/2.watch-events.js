const colors = require('colors');

const verifier = require('./verifier');
const listener = require('./moralis/setListener');
const moralisUtils = require('./moralis/utils/moralisUtils');
const utils = require('./utils');

function getWatchedEvents(contractsAddressesSettings) {
  return [
    {
      topic: 'SeedNumberAssigned()',
      tableName: 'SeedNumberAssigned',
      contractAddress: contractsAddressesSettings.minter,
      abi: { type: 'event', anonymous: false, name: 'SeedNumberAssigned', inputs: [] },
    },
    {
      topic: 'BatchMintExecuted(address,uint256[],string)',
      tableName: 'MintedTokens',
      contractAddress: contractsAddressesSettings.minter,
      abi: {
        type: 'event',
        anonymous: false,
        name: 'BatchMintExecuted',
        inputs: [
          { type: 'address', name: 'owner', indexed: false },
          { type: 'uint256[]', name: 'tokenIds', indexed: false },
          { type: 'string', name: 'stage', indexed: false },
        ],
      },
    },
    {
      topic: 'Transfer(address,address,uint256)',
      tableName: 'VillainsTransfers',
      contractAddress: contractsAddressesSettings.collection,
      abi: {
        type: 'event',
        anonymous: false,
        name: 'Transfer',
        inputs: [
          { type: 'address', name: 'from', indexed: true },
          { type: 'address', name: 'to', indexed: true },
          { type: 'uint256', name: 'tokenId', indexed: true },
        ],
      },
    },
  ];
}

async function main() {
  colors.enable();
  try {
    const moralisSettings = moralisUtils.moralisSettings();
    const contractsAddressesSettings = utils.getContractsAddressesSettings();
    const watchedEventsSettings = getWatchedEvents(contractsAddressesSettings);
    await verifier.askIsOk([moralisSettings, contractsAddressesSettings, watchedEventsSettings]);

    console.log('-------------Setting listeners on Moralis Server-------------'.green);
    for (const watchedEvent of watchedEventsSettings) {
      console.group();
      await listener.watchEventAndSync(watchedEvent);
      console.groupEnd();
    }
    console.log('-------------Listeners were set successfully on Moralis Server-------------'.green);
  } catch (error) {
    console.error(error);
  }
}

main()
  .then(() => process.exit(0))
  .catch(() => {
    process.exit(1);
  });
