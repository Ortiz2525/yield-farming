const fs = require('fs');
const os = require('os');

const SPLIT_CHAR = process.env.CSV_SEPARATOR !== 'comma' ? ';' : ',';

function buildAttributes(values) {
  const attributes = [];
  const traitsType = [
    'Hat',
    'Eyes',
    'Ears',
    'Mouth',
    'Nose',
    'Hair',
    'Helmet',
    'Clothes',
    'Skin',
    'Back',
    'Background',
  ];
  traitsType.forEach((trait, index) =>
    attributes.push({
      trait_type: trait,
      value: values[index],
    }),
  );
  return attributes;
}

function parseLine(line) {
  const values = line.split(SPLIT_CHAR);
  if (values.length !== 14) throw 'Has invalid values';
  return {
    description: values[1].trim(),
    name: values[2].trim(),
    attributes: buildAttributes(values.slice(3)),
  };
}

exports.parse = (fileName) => {
  console.log(`Parsing csv file:${fileName}...`);
  console.group();
  const data = fs.readFileSync(fileName, 'utf-8');
  const importedTokens = [];
  data.split(os.EOL).forEach((line, index) => {
    if (line) {
      try {
        importedTokens.push(parseLine(line));
      } catch (error) {
        throw `Line ${index}: ${error}`;
      }
    }
  });
  console.log('Imported tokens:', importedTokens.length);
  console.groupEnd();
  console.log('csv file parsed successfully!');
  return importedTokens;
};
