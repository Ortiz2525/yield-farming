const moralisUtils = require('./utils/moralisUtils');
const fs = require('fs');
const path = require('path');
const ObjectsToCsv = require('objects-to-csv');
const utils = require('./utils/utils');

const requiredExportFields = [
  'ethAddress',
  'fullName',
  'email',
  'address',
  'zipCode',
  'city',
  'country',
  'amount',
  'tier',
];

const allFields = [
  'ethAddress',
  'tier',
  'amount',
  'fullName',
  'email',
  'phone',
  'country',
  'state',
  'city',
  'zipCode',
  'address',
  'addressLine2',
  'dedicatedTo',
];

/**
 * It gets all users data from the database, filters out users that don't have all the required fields,
 * and then exports the data to an excel file
 * @param fileName - The name of the file to be generated.
 */
async function main(fileName) {
  console.log(`Exporting to excel file "${fileName}"...`);
  console.time('Process');

  fileName = path.resolve(fileName);

  if (fs.existsSync(fileName)) throw `Already exist file with name ${fileName}`;

  console.group();

  await moralisUtils.initialize({ useMasterKey: true });
  let usersDataWithTier = await moralisUtils.getUsersDataAndTier();

  let usersWithRequiredFields = usersDataWithTier.filter((user) => hasAllRequiredFields(user));

  usersWithRequiredFields.sort(
    (firstUser, secondUser) => +secondUser.tier - +firstUser.tier || +secondUser.amount - +firstUser.amount,
  );

  const mappedUsers = usersWithRequiredFields.map((userData) => {
    let user = {};
    for (const field of allFields) {
      user[field] = userData[field];
    }
    return user;
  });

  const csv = new ObjectsToCsv(mappedUsers);
  await csv.toDisk(fileName, { allColumns: false });

  console.groupEnd();
  utils.printElapsedTime('Process');
  console.log(`Excel file "${fileName}" generated successfully!`);
}

if (process.argv.length !== 3) {
  console.error('Invalid parameters amount!');
  process.exit(1);
}

main(process.argv[2])
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });

/**
 * If the user has all the required fields, return true, otherwise return false
 * @param user - The user object that is being exported.
 * @returns A boolean value.
 */
function hasAllRequiredFields(user) {
  let hasAllRequiredFields = true;
  for (const requiredField of requiredExportFields) {
    if (user[requiredField] == null || user[requiredField] == '') {
      hasAllRequiredFields = false;
      break;
    }
  }

  return hasAllRequiredFields;
}
