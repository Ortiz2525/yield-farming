const merkleTree = require('./utils/merkleTreeGenerator');
const moralisUtils = require('./utils/moralisUtils');

exports.buildFor = async (stage) => {
  const options = { useMasterKey: true };

  console.log('Setting whitelist hexProof for stage:', stage);
  console.group();
  await moralisUtils.initialize(options);

  const whitelist = await moralisUtils.getWhitelist(stage, options);

  const { rootHash, bulkUpdatedData } = await merkleTree.generateTree(whitelist);

  await moralisUtils.bulkUpdateMany('Whitelist', bulkUpdatedData, options);

  console.groupEnd();
  console.log('Whitelist hexProof executed successfully!');
  return rootHash;
};

// if (process.argv.length !== 3) {
//   console.error('Invalid parameters amount!');
//   console.error('Try => npm run script:set-proofs <stage_name>');
//   process.exit(1);
// }

// main(process.argv[2])
//   .then(() => process.exit(0))
//   .catch((error) => {
//     console.error(error);
//     process.exit(1);
//   });
