const hre = require('hardhat');
const colors = require('colors');

const verifier = require('./verifier');
const utils = require('./utils');
const { deployLilVillainsMinter } = require('./LilVillainsMinter.deploy');
const { deployLilVillains } = require('./LilVillains.deploy');

function LogAndBeginGroup(message) {
  Log(message);
  console.group();
}
function LogAndEndGroup(message) {
  Log(message);
  console.groupEnd();
}
function Log(message) {
  console.log(message);
}

async function deployContracts(deploySettings, deployer) {
  // Deploy LilVillainsMinter
  LogAndBeginGroup('----- Deploying LilVillainsMinter -------'.green);
  const { chainlinkSettings } = deploySettings;
  const lilVillainsMinter = await deployLilVillainsMinter({ deployer, ...chainlinkSettings });
  utils.generateOutput(lilVillainsMinter, 'LilVillainsMinter.json');
  const lilVillainsMinterAddress = lilVillainsMinter.address;
  LogAndEndGroup(`LilVillainsMinter address: ${lilVillainsMinterAddress}`.blue);

  // Deploy LilVillains
  LogAndBeginGroup('----- Deploying LilVillains -------'.green);
  const { villainsSettings, royaltySettings } = deploySettings;
  const lilVillains = await deployLilVillains({
    deployer,
    villainMinter: lilVillainsMinterAddress,
    royaltyAddressToSet: royaltySettings.address,
    ...villainsSettings,
  });
  utils.generateOutput(lilVillains, 'LilVillains.json');
  const lilVillainsAddress = lilVillains.address;
  LogAndEndGroup(`LilVillains address: ${lilVillainsAddress}`.blue);

  // Set LilVillains address in LilVillainsMinter
  LogAndBeginGroup('----- Set LilVillains address in LilVillainsMinter -------'.green);
  await lilVillainsMinter.setLilCollection(lilVillainsAddress);
  LogAndEndGroup('Done!'.blue);

  Log('----- END -------'.green);
}

async function main() {
  colors.enable();
  try {
    Log(`Current Network: ${hre.network.name}`.cyan);

    const [deployer] = await hre.ethers.getSigners();

    Log(`Deploying contracts with the account: ${deployer.address}`.cyan);
    Log(`Account balance: ${await deployer.getBalance()}`.cyan);

    const deploySettings = utils.getDeploySettings();
    console.dir(deploySettings);
    await verifier.askIsOk([]);
    await deployContracts(deploySettings, deployer);
  } catch (error) {
    console.error(error);
    throw error;
  }
}

main()
  .then(() => process.exit(0))
  .catch(() => {
    process.exit(1);
  });
